

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 30 21:41:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC12F1822 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  010C                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0115                     	;# 
    97  0116                     	;# 
    98  0117                     	;# 
    99  0118                     	;# 
   100  0119                     	;# 
   101  011A                     	;# 
   102  011B                     	;# 
   103  011D                     	;# 
   104  011D                     	;# 
   105  018C                     	;# 
   106  0191                     	;# 
   107  0191                     	;# 
   108  0192                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0194                     	;# 
   113  0195                     	;# 
   114  0196                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019C                     	;# 
   122  019C                     	;# 
   123  019D                     	;# 
   124  019E                     	;# 
   125  019F                     	;# 
   126  020C                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0292                     	;# 
   145  0293                     	;# 
   146  0294                     	;# 
   147  0295                     	;# 
   148  0295                     	;# 
   149  0296                     	;# 
   150  0391                     	;# 
   151  0392                     	;# 
   152  0393                     	;# 
   153  039A                     	;# 
   154  039C                     	;# 
   155  039D                     	;# 
   156  039E                     	;# 
   157  039F                     	;# 
   158  0FE4                     	;# 
   159  0FE5                     	;# 
   160  0FE6                     	;# 
   161  0FE7                     	;# 
   162  0FE8                     	;# 
   163  0FE9                     	;# 
   164  0FEA                     	;# 
   165  0FEB                     	;# 
   166  0FED                     	;# 
   167  0FEE                     	;# 
   168  0FEF                     	;# 
   169  000C                     _PORTA	set	12
   170  008C                     _TRISA	set	140
   171  0099                     _OSCCON	set	153
   172  008C                     _TRISAbits	set	140
   173  010C                     _LATA	set	268
   174  0214                     _SSP1STATbits	set	532
   175  0211                     _SSP1BUF	set	529
   176  0217                     _SSP1CON3	set	535
   177  0216                     _SSP1CON2	set	534
   178  0214                     _SSP1STAT	set	532
   179  0212                     _SSP1ADD	set	530
   180  0216                     _SSP1CON2bits	set	534
   181  0215                     _SSP1CON1	set	533
   182                           
   183                           ; #config settings
   184  0000                     
   185                           	psect	cinit
   186  07FE                     start_initialization:	
   187  07FE                     __initialization:	
   188  07FE                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191  07FE                     __end_of__initialization:	
   192  07FE  0020               	movlb	0
   193  07FF  2FE4               	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	cstackCOMMON
   196  0070                     __pcstackCOMMON:	
   197  0070                     ?_i2c_Init:	
   198  0070                     ??_i2c_Init:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_i2c_Wait:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ??_i2c_Wait:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_i2c_Start:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ??_i2c_Start:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_i2c_Restart:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ??_i2c_Restart:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_i2c_Stop:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ??_i2c_Stop:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_i2c_Write:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ??_i2c_Write:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_i2c_Address:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_i2c_Read:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ??_i2c_Read:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_i2c_read_command:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_main:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     i2c_Write@data:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     i2c_Address@mode:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     i2c_read_command@address:	
   253                           ; 1 bytes @ 0x0
   254                           
   255                           
   256                           ; 1 bytes @ 0x0
   257  0070                     	ds	1
   258  0071                     ??_i2c_Address:	
   259  0071                     i2c_Read@ack:	
   260                           ; 1 bytes @ 0x1
   261                           
   262                           
   263                           ; 1 bytes @ 0x1
   264  0071                     	ds	1
   265  0072                     i2c_Address@address:	
   266  0072                     i2c_Read@i2cReadData:	
   267                           ; 1 bytes @ 0x2
   268                           
   269                           
   270                           ; 1 bytes @ 0x2
   271  0072                     	ds	1
   272  0073                     i2c_Address@l_address:	
   273                           
   274                           ; 1 bytes @ 0x3
   275  0073                     	ds	1
   276  0074                     ??_i2c_read_command:	
   277  0074                     ??_main:	
   278                           ; 1 bytes @ 0x4
   279                           
   280                           
   281                           ; 1 bytes @ 0x4
   282  0074                     	ds	1
   283                           
   284                           	psect	cstackBANK0
   285  0020                     __pcstackBANK0:	
   286  0020                     main@read_buff:	
   287                           
   288                           ; 35 bytes @ 0x0
   289  0020                     	ds	35
   290                           
   291                           	psect	maintext
   292  07E4                     __pmaintext:	
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 37 in file "i2c.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;  read_buff      35    0[BANK0 ] unsigned char [35]
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0, pclath, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : B1F/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1
   312 ;;      Params:         0       0       0
   313 ;;      Locals:         0      35       0
   314 ;;      Temps:          1       0       0
   315 ;;      Totals:         1      35       0
   316 ;;Total ram usage:       36 bytes
   317 ;; Hardware stack levels required when called:    2
   318 ;; This function calls:
   319 ;;		_i2c_Init
   320 ;;		_i2c_Read
   321 ;;		_i2c_Stop
   322 ;;		_i2c_read_command
   323 ;; This function is called by:
   324 ;;		Startup code after reset
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           
   329                           ;psect for function _main
   330  07E4                     _main:	
   331                           
   332                           ;i2c.c: 39: OSCCON = 0b01101010;
   333                           
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   336  07E4  306A               	movlw	106
   337  07E5  0021               	movlb	1	; select bank1
   338  07E6  0099               	movwf	25	;volatile
   339                           
   340                           ;i2c.c: 40: TRISA = 0b000000;
   341  07E7  018C               	clrf	12	;volatile
   342                           
   343                           ;i2c.c: 41: LATA = 0b000000;
   344  07E8  0022               	movlb	2	; select bank2
   345  07E9  018C               	clrf	12	;volatile
   346                           
   347                           ;i2c.c: 42: PORTA = 0b000000;
   348  07EA  0020               	movlb	0	; select bank0
   349  07EB  018C               	clrf	12	;volatile
   350                           
   351                           ;i2c.c: 44: i2c_Init();
   352  07EC  27A8               	fcall	_i2c_Init
   353  07ED                     l629:	
   354                           ;i2c.c: 46: while(1)
   355                           
   356                           
   357                           ;i2c.c: 47: {
   358                           ;i2c.c: 48: unsigned char read_buff[35];
   359                           ;i2c.c: 50: _delay((unsigned long)((10)*(4000000/4000.0)));
   360  07ED  300D               	movlw	13
   361  07EE  00F4               	movwf	??_main
   362  07EF  30FC               	movlw	252
   363  07F0                     u87:	
   364  07F0  0B89               	decfsz	9,f
   365  07F1  2FF0               	goto	u87
   366  07F2  0BF4               	decfsz	??_main,f
   367  07F3  2FF0               	goto	u87
   368                           
   369                           ;i2c.c: 51: i2c_read_command(0x0A);
   370  07F4  300A               	movlw	10
   371  07F5  27B4               	fcall	_i2c_read_command
   372                           
   373                           ;i2c.c: 52: read_buff[0] = i2c_Read(0);
   374  07F6  3000               	movlw	0
   375  07F7  27D1               	fcall	_i2c_Read
   376  07F8  00F4               	movwf	??_main
   377  07F9  0874               	movf	??_main,w
   378  07FA  0020               	movlb	0	; select bank0
   379  07FB  00A0               	movwf	main@read_buff
   380                           
   381                           ;i2c.c: 99: i2c_Stop();
   382  07FC  278C               	fcall	_i2c_Stop
   383  07FD  2FED               	goto	l629
   384  07FE                     __end_of_main:	
   385                           ;i2c.c: 100: }
   386                           ;i2c.c: 103: return;
   387                           
   388                           
   389                           	psect	text1
   390  07B4                     __ptext1:	
   391 ;; *************** function _i2c_read_command *****************
   392 ;; Defined at:
   393 ;;		line 26 in file "i2c.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;  address         1    wreg     unsigned char 
   396 ;; Auto vars:     Size  Location     Type
   397 ;;  address         1    0[COMMON] unsigned char 
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1
   407 ;;      Params:         0       0       0
   408 ;;      Locals:         0       0       0
   409 ;;      Temps:          0       0       0
   410 ;;      Totals:         0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels used:    1
   413 ;; Hardware stack levels required when called:    1
   414 ;; This function calls:
   415 ;;		_i2c_Address
   416 ;;		_i2c_Restart
   417 ;;		_i2c_Start
   418 ;;		_i2c_Write
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _i2c_read_command
   426  07B4                     _i2c_read_command:	
   427                           
   428                           ;i2c.c: 28: i2c_Start();
   429                           
   430                           ;incstack = 0
   431                           ; Regs used in _i2c_read_command: [wreg+status,2+status,0+pclath+cstack]
   432  07B4  2792               	fcall	_i2c_Start
   433                           
   434                           ;i2c.c: 29: i2c_Address(0x0A, 0);
   435  07B5  01F0               	clrf	i2c_Address@mode
   436  07B6  300A               	movlw	10
   437  07B7  27C0               	fcall	_i2c_Address
   438                           
   439                           ;i2c.c: 30: i2c_Write(0x4C);
   440  07B8  304C               	movlw	76
   441  07B9  279F               	fcall	_i2c_Write
   442                           
   443                           ;i2c.c: 31: i2c_Restart();
   444  07BA  278F               	fcall	_i2c_Restart
   445                           
   446                           ;i2c.c: 32: i2c_Address(0x0A, 1);
   447  07BB  01F0               	clrf	i2c_Address@mode
   448  07BC  0AF0               	incf	i2c_Address@mode,f
   449  07BD  300A               	movlw	10
   450  07BE  27C0               	fcall	_i2c_Address
   451  07BF  0008               	return
   452  07C0                     __end_of_i2c_read_command:	
   453                           ;i2c.c: 34: return;
   454                           
   455                           
   456                           	psect	text2
   457  079F                     __ptext2:	
   458 ;; *************** function _i2c_Write *****************
   459 ;; Defined at:
   460 ;;		line 57 in file "i2c.h"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  data            1    wreg     unsigned char 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  data            1    0[COMMON] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1
   474 ;;      Params:         0       0       0
   475 ;;      Locals:         1       0       0
   476 ;;      Temps:          0       0       0
   477 ;;      Totals:         1       0       0
   478 ;;Total ram usage:        1 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_i2c_read_command
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _i2c_Write
   489  079F                     _i2c_Write:	
   490                           
   491                           ;incstack = 0
   492                           ; Regs used in _i2c_Write: [wreg]
   493                           ;i2c_Write@data stored from wreg
   494  079F  00F0               	movwf	i2c_Write@data
   495                           
   496                           ;i2c.h: 59: SSP1BUF = data;
   497  07A0  0870               	movf	i2c_Write@data,w
   498  07A1  0024               	movlb	4	; select bank4
   499  07A2  0091               	movwf	17	;volatile
   500  07A3                     l49:	
   501                           ;i2c.h: 60: while(SSP1STATbits.BF);
   502                           
   503  07A3  1814               	btfsc	20,0	;volatile
   504  07A4  2FA3               	goto	l49
   505                           
   506                           ;i2c.h: 63: SSP1CON2bits.ACKDT = 0;
   507  07A5  1296               	bcf	22,5	;volatile
   508                           
   509                           ;i2c.h: 64: SSP1CON2bits.ACKEN = 1;
   510  07A6  1616               	bsf	22,4	;volatile
   511                           
   512                           ;i2c.h: 67: return;
   513  07A7  0008               	return
   514  07A8                     __end_of_i2c_Write:	
   515                           
   516                           	psect	text3
   517  0792                     __ptext3:	
   518 ;; *************** function _i2c_Start *****************
   519 ;; Defined at:
   520 ;;		line 29 in file "i2c.h"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1
   534 ;;      Params:         0       0       0
   535 ;;      Locals:         0       0       0
   536 ;;      Temps:          0       0       0
   537 ;;      Totals:         0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_i2c_read_command
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           
   548                           ;psect for function _i2c_Start
   549  0792                     _i2c_Start:	
   550                           
   551                           ;i2c.h: 31: SSP1CON2bits.SEN = 1;
   552                           
   553                           ;incstack = 0
   554                           ; Regs used in _i2c_Start: [wreg]
   555  0792  0024               	movlb	4	; select bank4
   556  0793  1416               	bsf	22,0	;volatile
   557                           
   558                           ;i2c.h: 34: SSP1CON3 = 0b11101000;
   559  0794  30E8               	movlw	232
   560  0795  0097               	movwf	23	;volatile
   561  0796  0008               	return
   562  0797                     __end_of_i2c_Start:	
   563                           ;i2c.h: 36: return;
   564                           
   565                           
   566                           	psect	text4
   567  078F                     __ptext4:	
   568 ;; *************** function _i2c_Restart *****************
   569 ;; Defined at:
   570 ;;		line 40 in file "i2c.h"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		None
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1
   584 ;;      Params:         0       0       0
   585 ;;      Locals:         0       0       0
   586 ;;      Temps:          0       0       0
   587 ;;      Totals:         0       0       0
   588 ;;Total ram usage:        0 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_i2c_read_command
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           
   598                           ;psect for function _i2c_Restart
   599  078F                     _i2c_Restart:	
   600                           
   601                           ;i2c.h: 41: SSP1CON2bits.RSEN = 1;
   602                           
   603                           ;incstack = 0
   604                           ; Regs used in _i2c_Restart: []
   605  078F  0024               	movlb	4	; select bank4
   606  0790  1496               	bsf	22,1	;volatile
   607                           
   608                           ;i2c.h: 44: return;
   609  0791  0008               	return
   610  0792                     __end_of_i2c_Restart:	
   611                           
   612                           	psect	text5
   613  07C0                     __ptext5:	
   614 ;; *************** function _i2c_Address *****************
   615 ;; Defined at:
   616 ;;		line 72 in file "i2c.h"
   617 ;; Parameters:    Size  Location     Type
   618 ;;  address         1    wreg     unsigned char 
   619 ;;  mode            1    0[COMMON] unsigned char 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  address         1    2[COMMON] unsigned char 
   622 ;;  l_address       1    3[COMMON] unsigned char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1
   632 ;;      Params:         1       0       0
   633 ;;      Locals:         2       0       0
   634 ;;      Temps:          1       0       0
   635 ;;      Totals:         4       0       0
   636 ;;Total ram usage:        4 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_i2c_read_command
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _i2c_Address
   647  07C0                     _i2c_Address:	
   648                           
   649                           ;incstack = 0
   650                           ; Regs used in _i2c_Address: [wreg+status,2+status,0]
   651                           ;i2c_Address@address stored from wreg
   652  07C0  00F2               	movwf	i2c_Address@address
   653                           
   654                           ;i2c.h: 74: unsigned char l_address;
   655                           ;i2c.h: 76: l_address=address<<1;
   656  07C1  3572               	lslf	i2c_Address@address,w
   657  07C2  00F1               	movwf	??_i2c_Address
   658  07C3  0871               	movf	??_i2c_Address,w
   659  07C4  00F3               	movwf	i2c_Address@l_address
   660                           
   661                           ;i2c.h: 77: l_address+=mode;
   662  07C5  0870               	movf	i2c_Address@mode,w
   663  07C6  00F1               	movwf	??_i2c_Address
   664  07C7  0871               	movf	??_i2c_Address,w
   665  07C8  07F3               	addwf	i2c_Address@l_address,f
   666                           
   667                           ;i2c.h: 78: SSP1BUF = l_address;
   668  07C9  0873               	movf	i2c_Address@l_address,w
   669  07CA  0024               	movlb	4	; select bank4
   670  07CB  0091               	movwf	17	;volatile
   671  07CC                     l55:	
   672                           ;i2c.h: 79: while(SSP1STATbits.BF);
   673                           
   674  07CC  1814               	btfsc	20,0	;volatile
   675  07CD  2FCC               	goto	l55
   676                           
   677                           ;i2c.h: 81: SSP1CON2bits.ACKDT = 0;
   678  07CE  1296               	bcf	22,5	;volatile
   679                           
   680                           ;i2c.h: 82: SSP1CON2bits.ACKEN = 1;
   681  07CF  1616               	bsf	22,4	;volatile
   682                           
   683                           ;i2c.h: 85: return;
   684  07D0  0008               	return
   685  07D1                     __end_of_i2c_Address:	
   686                           
   687                           	psect	text6
   688  078C                     __ptext6:	
   689 ;; *************** function _i2c_Stop *****************
   690 ;; Defined at:
   691 ;;		line 48 in file "i2c.h"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		None
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1
   705 ;;      Params:         0       0       0
   706 ;;      Locals:         0       0       0
   707 ;;      Temps:          0       0       0
   708 ;;      Totals:         0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _i2c_Stop
   720  078C                     _i2c_Stop:	
   721                           
   722                           ;i2c.h: 50: SSP1CON2bits.PEN=1;
   723                           
   724                           ;incstack = 0
   725                           ; Regs used in _i2c_Stop: []
   726  078C  0024               	movlb	4	; select bank4
   727  078D  1516               	bsf	22,2	;volatile
   728                           
   729                           ;i2c.h: 53: return;
   730  078E  0008               	return
   731  078F                     __end_of_i2c_Stop:	
   732                           
   733                           	psect	text7
   734  07D1                     __ptext7:	
   735 ;; *************** function _i2c_Read *****************
   736 ;; Defined at:
   737 ;;		line 89 in file "i2c.h"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  ack             1    wreg     unsigned char 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  ack             1    1[COMMON] unsigned char 
   742 ;;  i2cReadData     1    2[COMMON] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      unsigned char 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, pclath, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1
   752 ;;      Params:         0       0       0
   753 ;;      Locals:         2       0       0
   754 ;;      Temps:          1       0       0
   755 ;;      Totals:         3       0       0
   756 ;;Total ram usage:        3 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:    1
   759 ;; This function calls:
   760 ;;		_i2c_Wait
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function _i2c_Read
   768  07D1                     _i2c_Read:	
   769                           
   770                           ;incstack = 0
   771                           ; Regs used in _i2c_Read: [wreg+status,2+status,0+pclath+cstack]
   772                           ;i2c_Read@ack stored from wreg
   773  07D1  00F1               	movwf	i2c_Read@ack
   774                           
   775                           ;i2c.h: 94: unsigned char i2cReadData;
   776                           ;i2c.h: 96: i2c_Wait();
   777  07D2  2797               	fcall	_i2c_Wait
   778                           
   779                           ;i2c.h: 98: SSP1CON2bits.RCEN=1;
   780  07D3  0024               	movlb	4	; select bank4
   781  07D4  1596               	bsf	22,3	;volatile
   782  07D5                     l61:	
   783                           ;i2c.h: 99: while(!(SSP1STATbits.BF));
   784                           
   785  07D5  1C14               	btfss	20,0	;volatile
   786  07D6  2FD5               	goto	l61
   787                           
   788                           ;i2c.h: 100: i2cReadData = SSP1BUF;
   789  07D7  0811               	movf	17,w	;volatile
   790  07D8  00F0               	movwf	??_i2c_Read
   791  07D9  0870               	movf	??_i2c_Read,w
   792  07DA  00F2               	movwf	i2c_Read@i2cReadData
   793                           
   794                           ;i2c.h: 101: if ( ack ) {
   795  07DB  0871               	movf	i2c_Read@ack,w
   796  07DC  1903               	btfsc	3,2
   797  07DD  2FE0               	goto	l64
   798                           
   799                           ;i2c.h: 102: SSP1CON2bits.ACKDT=0;
   800  07DE  1296               	bcf	22,5	;volatile
   801                           
   802                           ;i2c.h: 103: } else {
   803  07DF  2FE1               	goto	l65
   804  07E0                     l64:	
   805                           
   806                           ;i2c.h: 104: SSP1CON2bits.ACKDT=1;
   807  07E0  1696               	bsf	22,5	;volatile
   808  07E1                     l65:	
   809                           
   810                           ;i2c.h: 105: }
   811                           ;i2c.h: 106: SSP1CON2bits.ACKEN=1;
   812  07E1  1616               	bsf	22,4	;volatile
   813                           
   814                           ;i2c.h: 108: return( i2cReadData );
   815  07E2  0872               	movf	i2c_Read@i2cReadData,w
   816  07E3  0008               	return
   817  07E4                     __end_of_i2c_Read:	
   818                           
   819                           	psect	text8
   820  0797                     __ptext8:	
   821 ;; *************** function _i2c_Wait *****************
   822 ;; Defined at:
   823 ;;		line 21 in file "i2c.h"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1
   837 ;;      Params:         0       0       0
   838 ;;      Locals:         0       0       0
   839 ;;      Temps:          0       0       0
   840 ;;      Totals:         0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_i2c_Read
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           
   851                           ;psect for function _i2c_Wait
   852  0797                     _i2c_Wait:	
   853  0797                     l539:	
   854                           ;i2c.h: 23: while ( ( SSP1CON2 & 0x1F ) || ( SSP1STAT & 0x04 ) );
   855                           
   856                           ;incstack = 0
   857                           ; Regs used in _i2c_Wait: [wreg+status,2]
   858                           
   859  0797  0024               	movlb	4	; select bank4
   860  0798  0816               	movf	22,w	;volatile
   861  0799  391F               	andlw	31
   862  079A  1D03               	btfss	3,2
   863  079B  2F97               	goto	l539
   864  079C  1D14               	btfss	20,2	;volatile
   865  079D  0008               	return
   866  079E  2F97               	goto	l539
   867  079F                     __end_of_i2c_Wait:	
   868                           ;i2c.h: 25: return;
   869                           
   870                           
   871                           	psect	text9
   872  07A8                     __ptext9:	
   873 ;; *************** function _i2c_Init *****************
   874 ;; Defined at:
   875 ;;		line 5 in file "i2c.h"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1
   889 ;;      Params:         0       0       0
   890 ;;      Locals:         0       0       0
   891 ;;      Temps:          0       0       0
   892 ;;      Totals:         0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _i2c_Init
   904  07A8                     _i2c_Init:	
   905                           
   906                           ;i2c.h: 9: TRISAbits.TRISA1 = 1;
   907                           
   908                           ;incstack = 0
   909                           ; Regs used in _i2c_Init: [wreg]
   910  07A8  0021               	movlb	1	; select bank1
   911  07A9  148C               	bsf	12,1	;volatile
   912                           
   913                           ;i2c.h: 10: TRISAbits.TRISA2 = 1;
   914  07AA  150C               	bsf	12,2	;volatile
   915                           
   916                           ;i2c.h: 12: SSP1CON1 = 0b00101000;
   917  07AB  3028               	movlw	40
   918  07AC  0024               	movlb	4	; select bank4
   919  07AD  0095               	movwf	21	;volatile
   920                           
   921                           ;i2c.h: 13: SSP1CON2bits.SEN = 0;
   922  07AE  1016               	bcf	22,0	;volatile
   923                           
   924                           ;i2c.h: 14: SSP1ADD = 0x0A;
   925  07AF  300A               	movlw	10
   926  07B0  0092               	movwf	18	;volatile
   927                           
   928                           ;i2c.h: 15: SSP1STAT = 0b11000000;
   929  07B1  30C0               	movlw	192
   930  07B2  0094               	movwf	20	;volatile
   931  07B3  0008               	return
   932  07B4                     __end_of_i2c_Init:	
   933                           ;i2c.h: 17: return;
   934                           
   935  007E                     btemp	set	126	;btemp
   936  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80     35      35
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _i2c_read_command->_i2c_Address

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0     220
                                              4 COMMON     1     1      0
                                              0 BANK0     35    35      0
                           _i2c_Init
                           _i2c_Read
                           _i2c_Stop
                   _i2c_read_command
 ---------------------------------------------------------------------------------
 (1) _i2c_read_command                                     1     1      0     189
                        _i2c_Address
                        _i2c_Restart
                          _i2c_Start
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          4     3      1     174
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Read                                             3     3      0      30
                                              0 COMMON     3     3      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_Init
   _i2c_Read
     _i2c_Wait
   _i2c_Stop
   _i2c_read_command
     _i2c_Address
     _i2c_Restart
     _i2c_Start
     _i2c_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       5       2       35.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     23      23       6       43.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 30 21:41:06 2018

               __CFG_CP$ON 0000              ??_i2c_Address 0071                         l61 07D5  
                       l55 07CC                         l64 07E0                         l65 07E1  
                       l49 07A3                         u87 07F0                __CFG_LVP$ON 0000  
              i2c_Read@ack 0071                        l539 0797                        l629 07ED  
             __CFG_BORV$LO 0000                        wreg 0009              ??_i2c_Restart 0070  
                     _LATA 010C               __CFG_WRT$OFF 0000                       _main 07E4  
                     btemp 007E                       start 0001                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _PORTA 000C                      _TRISA 008C  
      __end_of_i2c_Address 07D1             __CFG_BOREN$OFF 0000        __end_of_i2c_Restart 0792  
                    status 0003                      wtemp0 007E             __CFG_MCLRE$OFF 0000  
          __initialization 07FE               __end_of_main 07FE           __end_of_i2c_Init 07B4  
         __end_of_i2c_Read 07E4           __end_of_i2c_Wait 079F           __end_of_i2c_Stop 078F  
                   ??_main 0074         __size_of_i2c_Start 0005         __size_of_i2c_Write 0009  
                   _OSCCON 0099              main@read_buff 0020             __CFG_PWRTE$OFF 0000  
           __CFG_STVREN$ON 0000  __size_of_i2c_read_command 000C                _i2c_Address 07C0  
            i2c_Write@data 0070                _i2c_Restart 078F    __end_of__initialization 07FE  
           __pcstackCOMMON 0070          __end_of_i2c_Start 0797          __end_of_i2c_Write 07A8  
                ?_i2c_Init 0070                  ?_i2c_Read 0070                  ?_i2c_Wait 0070  
                ?_i2c_Stop 0070                 __pmaintext 07E4         i2c_Address@address 0072  
                  _SSP1ADD 0212                    _SSP1BUF 0211                 ??_i2c_Init 0070  
               ??_i2c_Read 0070                 ??_i2c_Wait 0070                 ??_i2c_Stop 0070  
         _i2c_read_command 07B4                    __ptext1 07B4                    __ptext2 079F  
                  __ptext3 0792                    __ptext4 078F                    __ptext5 07C0  
                  __ptext6 078C                    __ptext7 07D1                    __ptext8 0797  
                  __ptext9 07A8       end_of_initialization 07FE       i2c_Address@l_address 0073  
             ?_i2c_Address 0070           __CFG_FOSC$INTOSC 0000                  _TRISAbits 008C  
             ?_i2c_Restart 0070                  _i2c_Start 0792                  _i2c_Write 079F  
      start_initialization 07FE          __size_of_i2c_Init 000C          __size_of_i2c_Read 0013  
        __size_of_i2c_Wait 0008          __size_of_i2c_Stop 0003                 ?_i2c_Start 0070  
               ?_i2c_Write 0070                  ___latbits 0000              __pcstackBANK0 0020  
 __end_of_i2c_read_command 07C0       __size_of_i2c_Address 0011       __size_of_i2c_Restart 0003  
                 _SSP1CON1 0215                   _SSP1CON2 0216                   _SSP1CON3 0217  
                 _SSP1STAT 0214                ??_i2c_Start 0070                ??_i2c_Write 0070  
                 _i2c_Init 07A8                   _i2c_Read 07D1                   _i2c_Wait 0797  
                 _i2c_Stop 078C               _SSP1CON2bits 0216              __size_of_main 001A  
             _SSP1STATbits 0214          ?_i2c_read_command 0070            i2c_Address@mode 0070  
        __CFG_CLKOUTEN$OFF 0000         ??_i2c_read_command 0074    i2c_read_command@address 0070  
      i2c_Read@i2cReadData 0072  
